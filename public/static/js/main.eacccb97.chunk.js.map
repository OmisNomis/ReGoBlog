{"version":3,"sources":["utils.js","static/images/butter-logo.png","static/images/twitter-official.svg","static/images/linkedin-icon.svg","components/Navbar.js","components/Footer.js","components/BlogList.js","components/BlogPost.js","components/Categories.js","components/Category.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","splitArrayToChunks","arr","size","myArray","i","length","push","slice","uppercaseFirstLetter","word","toUpperCase","__webpack_require__","p","Navbar","react_default","a","createElement","className","href","config","brand","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Component","Footer","rel","target","alt","style","height","src","Logo","social","twitter","TwitterLogo","linkedIn","LinkedinLogo","BlogList","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","meta","data","page","axios","get","concat","auth","username","process","password","resp","setState","assign","newProps","match","params","getPosts","nextPage","next_page","previousPage","previous_page","map","post","key","Link","to","slug","title","summary","author","first_name","last_name","moment","format","published","_default","Prism","highlightAll","Helmet","seo_title","name","content","meta_description","featured_image","dangerouslySetInnerHTML","__html","body","React","row","ix","category","index","maxWidth","recent_posts","idx","App","history","createHistory","Router","components_Navbar","paddingBottom","Switch","Route","path","exact","component","BlogPost","Categories","Category","components_Footer","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","components_App","document","getElementById","URL","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.eacccb97.chunk.js","sourcesContent":["\nconst splitArrayToChunks = (arr, size) => {\n  var myArray = []\n  for (var i = 0; i < arr.length; i += size) {\n    myArray.push(arr.slice(i, i + size))\n  }\n  return myArray\n}\n\nconst uppercaseFirstLetter = word => word[0].toUpperCase() + word.slice(1)\n\nmodule.exports = {\n  splitArrayToChunks,\n  uppercaseFirstLetter\n}\n","module.exports = __webpack_public_path__ + \"static/media/butter-logo.37e34810.png\";","module.exports = __webpack_public_path__ + \"static/media/twitter-official.a2b5e0f2.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkedin-icon.d9cb571a.svg\";","import React, { Component } from 'react'\n\nimport config from '../config.json'\n\nclass Navbar extends Component {\n  render () {\n    return (\n      <nav className='navbar navbar-expand-md navbar-dark bg-dark'>\n        <a className='navbar-brand' href='/'>{config.brand}</a>\n        <button className='navbar-toggler' type='button' data-toggle='collapse' data-target='#navbarSupportedContent' aria-controls='navbarSupportedContent' aria-expanded='false' aria-label='Toggle navigation'>\n          <span className='navbar-toggler-icon' />\n        </button>\n        <div className='navbar-collapse collapse w-100 order-3 dual-collapse2' id='navbarSupportedContent'>\n          <ul className='navbar-nav mr-auto ml-auto'>\n            <li className='nav-item active'>\n              <a className='nav-link' href='/categories'>Categories</a>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    )\n  }\n}\n\nexport default Navbar\n","import React, { Component } from 'react'\n\nimport Logo from '../static/images/butter-logo.png'\nimport TwitterLogo from '../static/images/twitter-official.svg'\nimport LinkedinLogo from '../static/images/linkedin-icon.svg'\n\nimport config from '../config.json'\n\nclass Footer extends Component {\n  render () {\n    return (\n      <nav className='navbar fixed-bottom navbar-light bg-light'>\n        <div className='container-fluid'>\n          <div className='row w-100'>\n            <div className='col-4 footer-left text-left'>\n              <span>\n                Powered by <a rel='noopener noreferrer' target='_blank' href='https://buttercms.com'><img alt='' style={{ height: 30 }} src={Logo} /></a>\n              </span>\n            </div>\n            <div className='col-4 footer-middle text-center'>\n              <span className='pl-3'>\n                <a rel='noopener noreferrer' target='_blank' href={config.social.twitter}><img alt='' style={{ height: 20 }} src={TwitterLogo} /></a>\n              </span>\n              <span className='pl-3'>\n                <a rel='noopener noreferrer' target='_blank' href={config.social.linkedIn}><img alt='' style={{ height: 20 }} src={LinkedinLogo} /></a>\n              </span>\n            </div>\n            <div className='col-4 footer-right text-right'>\n              {/* Right */}\n            </div>\n          </div>\n        </div>\n      </nav>\n    )\n  }\n}\n\nexport default Footer\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport moment from 'moment'\nimport axios from 'axios'\n\nclass BlogList extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      meta: {},\n      data: [],\n      page: 1\n    }\n  }\n\n  async getPosts (page) {\n    const resp = await axios.get(`/api/v1/posts/${page}`, {\n      auth: {\n        username: process.env.REACT_APP_API_USERNAME,\n        password: process.env.REACT_APP_API_PASSWORD\n      }\n    })\n\n    this.setState(Object.assign({}, { page }, resp.data))\n  }\n\n  componentWillReceiveProps (newProps) {\n    const page = newProps.match.params.page\n    if (page !== this.state.page) {\n      this.getPosts(page)\n    }\n  }\n\n  componentDidMount () {\n    const page = this.props.match.params.page || 1\n\n    this.getPosts(page)\n  }\n\n  render () {\n    const nextPage = this.state.meta.next_page\n    const previousPage = this.state.meta.previous_page\n\n    return (\n      <div className='container mt-4'>\n        <div className='row'>\n          <div className='col-lg-8 col-md-10 mx-auto'>\n            <div className='post-list'>\n              {this.state.data.map((post, key) => {\n                return (\n                  <div key={key}>\n                    <div className='post-preview'>\n                      <Link to={`/blog/post/${post.slug}`}>\n                        <h2 className='post-title'>{post.title}</h2>\n                        <h3 className='post-subtitle'>{post.summary}</h3>\n                      </Link>\n                      <p className='post-meta'>{`Posted by ${post.author.first_name} ${post.author.last_name} on ${moment().format('MMMM Do, YYYY', post.published)}`}</p>\n                    </div>\n                    <hr />\n                  </div>\n                )\n              })}\n            </div>\n\n            <div className='container'>\n              <div className='row'>\n                <div className='col text-left pr-0'>\n                  {\n                    previousPage ? (\n                      <div className='clearfix'>\n                        <Link className='btn btn-primary' to={`/blog/${previousPage}`}>\n                        &larr; Newer Posts\n                        </Link>\n                      </div>\n                    ) : null\n                  }\n                </div>\n                <div className='col text-right pl-0'>\n                  {\n                    nextPage ? (\n                      <div className='clearfix'>\n                        <Link className='btn btn-primary' to={`/blog/${nextPage}`}>\n                  Older Posts &rarr;\n                        </Link>\n                      </div>\n                    ) : null\n                  }\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default BlogList\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\nimport Prism from 'prismjs'\nimport axios from 'axios'\n\nexport default class extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      data: {}\n    }\n  }\n\n  async componentDidMount () {\n    const { match } = this.props\n    const resp = await axios.get(`/api/v1/post/${match.params.post}`, {\n      auth: {\n        username: process.env.REACT_APP_API_USERNAME,\n        password: process.env.REACT_APP_API_PASSWORD\n      }\n    })\n    this.setState(resp.data)\n\n    Prism.highlightAll()\n  }\n\n  render () {\n    const post = this.state.data\n\n    return (\n      <div>\n        <Helmet>\n          <title>{post.seo_title}</title>\n          <meta name='description' content={post.meta_description} />\n          <meta name='og:image' content={post.featured_image} />\n        </Helmet>\n\n        <div className='container mt-5'>\n          <div className='row'>\n            <div className='col-sm-10 col-md-8 offset-sm-1 offset-md-2 text-left'>\n              <h2>{post.title}</h2>\n            </div>\n          </div>\n        </div>\n        <div className='container'>\n          <div className='row'>\n            <div className='col-sm-10 col-md-8 offset-sm-1 offset-md-2 text-left cms-content'>\n              <div dangerouslySetInnerHTML={{ __html: post.body }} />\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\n\nimport { splitArrayToChunks, uppercaseFirstLetter } from '../utils'\n\nexport default class extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      data: []\n    }\n  }\n\n  async componentDidMount () {\n    const resp = await axios.get(`/api/v1/categories`, {\n      auth: {\n        username: process.env.REACT_APP_API_USERNAME,\n        password: process.env.REACT_APP_API_PASSWORD\n      }\n    })\n\n    this.setState(resp.data)\n  }\n  render () {\n    return (\n      <div className='container mt-5 pt-3'>\n        {\n          splitArrayToChunks(this.state.data, 6).map((row, ix) => {\n            return (\n              <div className='row' key={ix}>\n                {\n                  row.map((category, index) => {\n                    return (\n                      <div key={index} className='col'>\n                        <Link to={`/category/${category.name}`}>\n                          <div className='card bg-light mb-3' style={{ maxWidth: '18rem' }}>\n                            <div className='card-body'>\n                              <h4 className='card-title'>{uppercaseFirstLetter(category.name)}</h4>\n                              <h6 className='card-subtitle mb-2 text-muted'>Posts: {category.recent_posts.length}</h6>\n                              {category.recent_posts.map((post, idx) => {\n                                return <p key={idx} className='card-text'>{post.title}</p>\n                              })}\n                            </div>\n                          </div>\n                        </Link>\n                      </div>\n                    )\n                  })\n                }\n              </div>\n            )\n          })\n        }\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport axios from 'axios'\nimport moment from 'moment'\n\nimport { uppercaseFirstLetter } from '../utils'\n\nexport default class extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      data: {\n        recent_posts: []\n      }\n    }\n  }\n  async componentDidMount () {\n    const { match } = this.props\n    const resp = await axios.get(`/api/v1/category/${match.params.category}`, {\n      auth: {\n        username: process.env.REACT_APP_API_USERNAME,\n        password: process.env.REACT_APP_API_PASSWORD\n      }\n    })\n    this.setState(resp.data)\n  }\n\n  render () {\n    return (\n      <div className='container mt-5'>\n        <div className='row'>\n          <div className='col-lg-8 col-md-10 mx-auto text-center'>\n            <h1 className='text-muted'>{this.state.data.name && uppercaseFirstLetter(this.state.data.name)}</h1>\n          </div>\n        </div>\n        <div className='row'>\n          <div className='col-lg-8 col-md-10 mx-auto'>\n            <div className='post-list'>\n              {this.state.data.recent_posts.map((post, key) => {\n                return (\n                  <div key={key}>\n                    <div className='post-preview'>\n                      <Link to={`/blog/post/${post.slug}`}>\n                        <h2 className='post-title'>{post.title}</h2>\n                        <h3 className='post-subtitle'>{post.summary}</h3>\n                      </Link>\n                      <p className='post-meta'>{`Posted by ${post.author.first_name} ${post.author.last_name} on ${moment().format('MMMM Do, YYYY', post.published)}`}</p>\n                    </div>\n                    <hr />\n                  </div>\n                )\n              })}\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { Router, Route, Switch } from 'react-router-dom'\nimport { createBrowserHistory as createHistory } from 'history'\n\nimport Navbar from './Navbar'\nimport Footer from './Footer'\n\nimport BlogList from './BlogList'\nimport BlogPost from './BlogPost'\nimport Categories from './Categories'\nimport Category from './Category'\n\nclass App extends Component {\n  constructor (props) {\n    super(props)\n    this.history = createHistory(this.props)\n  }\n\n  render () {\n    return (\n      <Router history={this.history}>\n        <div>\n          <Navbar history={this.history} />\n          <div style={{ paddingBottom: 100 }}>\n            <Switch>\n              <Route path='/blog/:page' exact component={BlogList} />\n              <Route path='/blog' exact component={BlogList} />\n              <Route path='/blog/post/:post' component={BlogPost} />\n              <Route path='/categories' exact component={Categories} />\n              <Route path='/category/:category' exact component={Category} />\n\n              <Route component={BlogList} />\n            </Switch>\n\n          </div>\n          <Footer />\n        </div>\n      </Router>\n    )\n  }\n}\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\n\n/** Prism */\nimport 'prismjs'\n// Theme\nimport 'prismjs/themes/prism-okaidia.css'\n// Plugins\nimport 'prismjs/plugins/line-numbers/prism-line-numbers.css'\nimport 'prismjs/plugins/line-numbers/prism-line-numbers'\n// Components\nimport 'prismjs/components/prism-go.min.js'\nimport 'prismjs/components/prism-java.min.js'\nimport 'prismjs/components/prism-json.min.js'\nimport 'prismjs/components/prism-bash.min.js'\nimport 'prismjs/components/prism-jsx.min.js'\n\nimport ReactDOM from 'react-dom'\n\nimport App from './components/App'\nimport * as serviceWorker from './serviceWorker'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './static/css/main.css'\nimport 'bootstrap/dist/js/bootstrap.bundle.min'\n\nReactDOM.render(<App />, document.getElementById('root'))\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register()\n"],"sourceRoot":""}